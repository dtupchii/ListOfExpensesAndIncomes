<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type DataGrid}"
           x:Key="DataGridTheme">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Margin" Value="20 15"/>
        <Setter Property="Height" Value="330"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontFamily" Value="Georgia"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Padding" Value="5 10"/>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#393939"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="#efefef"/>
                <Setter Property="BorderThickness" Value="0 "/>
                <Setter Property="Cursor" Value="IBeam"/>
            </Trigger>

            <!--<MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Binding="{Binding Type}" Value="Income"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="DarkGreen"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Binding="{Binding Type}" Value="Purchase"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="OrangeRed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>-->
        </Style.Triggers>
    </Style>
    
    <!--<Style-->

    <Style x:Key="TextColumnStyle"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="BalanceTextColumnStyle"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditingTextColumnStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3 0"/>
    </Style>

    <!--<Style x:Key="ComboBoxColumnStyle"
            TargetType="">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="EditingComboBoxColumnStyle"
       TargetType="{x:Type ComboBox}"
       BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3 0"/>
    </Style>

</ResourceDictionary>